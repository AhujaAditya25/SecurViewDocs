package com.jpa_template.project;


import java.util.List;

import java.util.Optional;

import org.hibernate.metamodel.mapping.EntityValuedModelPart;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;


import jakarta.transaction.Transactional;
import jakarta.validation.Valid;


@RestController
@Validated
public class EmployeRestController {
	
	private EmployeService employeservice;

	
	public EmployeRestController(EmployeService repository) {
		employeservice = repository;
	}
	
	
	
	// 1. FIND ALL EMPLOYEES.
		@GetMapping("/FindEmployes")
		public List<Employe>retriveAllEmploye(){
			return employeservice.retriveAllEmployes();
		}
	
	
	//2. GET EMPLOYEE BY ID.	
		@GetMapping("/getEmployee/{id}")
		  public ResponseEntity<Employe> getEmployeById(@PathVariable("id") long id) {
		   return employeservice.getEmployeById(id);
		  }
	
	
	
	//3. UPDATE EMPLOYEE
		@PutMapping("/updateEmployeInfo/{id}")
		  public ResponseEntity<Employe> updateTutorial(@PathVariable("id") long id, @RequestBody Employe e) {
			return employeservice.updateTutorial(id, e);
		  }
	
		
	//4. ADD EMPLOYEE
		
		@PostMapping("/AddAnEmploye")
		public ResponseEntity<Object> createEmploye(@RequestBody @Valid Employe emp){
							ObjectDTO a = employeservice.createEmploye(emp);
				return new ResponseEntity<Object>(a,HttpStatus.OK);
		}
		
		
	
	
		
		// 5. DELETE EMPLOYE
				@DeleteMapping("/delete/{id}")
				public void deleteUser(@PathVariable long id) {
					employeservice.deleteUser(id);
				}
	
}
